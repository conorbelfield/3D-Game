Shader.source[document.currentScript.src.split('js/shaders/')[1]] = `
precision highp float;
varying vec2 texCoord; // pass these on from vertex shader
varying vec3 worldPos;
varying vec3 worldNormal;
uniform sampler2D colorTexture;


// Light Stuff
uniform vec4 lightPos[2];
uniform vec3 lightPowerDensity[2];
uniform vec3 spotDirection[2];

void main(void) {
	vec3 lightSum = vec3(0,0,0);
	for (int i = 0; i < 2; i++) {
		vec3 lightDirection = (lightPos[i].xyz - (worldPos * lightPos[i].w));
		float cos = dot(normalize(lightDirection), normalize(worldNormal));
		vec3 halfway = lightPowerDensity[i] / dot(lightDirection, lightDirection);
		float spotLight = max(dot(normalize(lightDirection), normalize(spotDirection[i])), 0.0);

		lightSum += max(cos, 0.0) * texture2D(colorTexture, texCoord).rgb * halfway * pow(spotLight, 5.0);
	}
	gl_FragColor = vec4(lightSum, 1);
}
`;